package util;

public class TextReplace {
	
	public String textReplaceALL(String text) {
		
		text = text.replaceAll("<(/)?([a-zA-Z]*)(\\s[a-zA-Z]*=[^>]*)?(\\s)*(/)?>", "");
		text = text.replaceAll("<[^>]*>", "");

		
		text = text.replaceAll("(&nbsp;)?(&gt;)?(&lt;)?(&#x200b;)?(&#xfffd;)?(&#xfeff;)?(   )?(^\uAC00-\uD7A3xfe0-9a-zA-Z\\s)?(&amp;)?", "").trim();  
		
		text = text.replaceAll("(\\[)?(\\])?([:])?([;])?", "");
		text = text.replaceAll("([#])?([$])?([%])?(\\^)?([&])?(\\()?(\\))?", "");
		text = text.replaceAll("(['])?([?])?([!])?([@])?([~])?([*])?([/])?", "");

		text = text.replaceAll("([+])?([=])?([/])?([-])?([_])?(✔)?", "");

		text = text.replaceAll("(━)?(━)?([)?(])?(＃)?(＆)?(＊)?(＠)?(§)?(※)?(☆)?(★)?(○)?(●)?(◎)?(◇)?(◆)?", "");
		text = text.replaceAll("(□)?(■)?(△)?(♥)?(♡)?(▽)?(▼)?(▲)?(→)?(←)?(↑)?(↓)?(↔)?(〓)?(◁)?(◀)?", "");
		text = text.replaceAll("(♤)?(▷)?(▶)?(♠)?(♧)?(♣)?(⊙)?(◈)?(▣)?(◐)?(◑)?(▒)?(▤)?(▥)?(▨)?(▧)?(▦)?(▩)?(♨)?(☏)?(#)?", "");
		text = text.replaceAll("(☎)?(☜)?(☞)?(¶)?(†)?(‡)?(↕)?(↗)?(↙)?(↖)?(↘)?(♭)?(♩)?(♪)?(♬)?(㉿)?", "");
		text = text.replaceAll("(㈜)?(№)?(㏇)?(™)?(㏂)?(㏘)?(℡)?(®)?(ª)?(º)?(㉾)?(!)?(@)?(#)?($)?(%)?(^)?(&)?", "");

		text = text.replaceAll("(＂)?(（)?(）)?(［)?(］)?(｛)?(｝)?(‘)?(’)?(“)?(”)?(〔)?(〕)?(〈)?(〉)?(〈)?(〉)?", "");
		text = text.replaceAll("(《)?(》)?(「)?(」)?(『)?(』)?(【)?(】)?", "");

		text = text.replaceAll("(ⓐ)?(ⓑ)?(ⓒ)?(ⓓ)?(ⓔ)?(ⓕ)?(ⓖ)?(ⓗ)?(ⓘ)?(ⓙ)?(ⓚ)?(ⓛ)?(ⓜ)?(ⓝ)?(ⓞ)?(ⓟ)?(ⓠ)?(ⓡ)?", "");
		text = text.replaceAll("(ⓢ)?(ⓣ)?(ⓤ)?(ⓥ)?(ⓦ)?(ⓧ)?(ⓨ)?(ⓩ)?(①)?(②)?(③)?(④)?(⑤)?(⑥)?(⑦)?(⑧)?(⑨)?(⑩)?", "");
		text = text.replaceAll("(⑪)?(⑫)?(⑬)?(⑭)?(⑮)?(⒜)?(⒝)?(⒞)?(⒟)?(⒠)?(⒡)?(⒢)?(⒣)?(⒤)?(⒥)?(⒦)?(⒧)?(⒨)?", "");
		text = text.replaceAll("(⒩)?(⒪)?(⒫)?(⒬)?(⒭)?(⒮)?(⒯)?(⒰)?(⒱)?(⒲)?(⒳)?(⒴)?(⒵)?(⑴)?(⑵)?(⑶)?(⑷)?(⑸)?", "");
		text = text.replaceAll("(⑹)?(⑺)?(⑻)?(⑼)?(⑽)?(⑾)?(⑿)?(⒀)?(⒁)?(⒂)?", "");
		
		text = text.replaceAll("(＄)?(％)?(￦)?(Ｆ)?(′)?(″)?(℃)?(Å)?(￠)?(￡)?(￥)?(¤)?(℉)?(‰)?(€)?(㎕)?(㎖)?(㎗)?", "");
		text = text.replaceAll("(ℓ)?(㎘)?(㏄)?(㎣)?(㎤)?(㎥)?(㎦)?(㎙)?(㎚)?(㎛)?(㎜)?(㎝)?(㎞)(㎟)?(㎠)?(㎡)?(㎢)?(㏊)?", "");
		text = text.replaceAll("(㎍)?(㎎)?(㎏)?(㏏)?(㎈)?(㎉)?(㏈)?(㎧)?(㎨)?(㎰)?(㎱)?(㎲)?(㎳)?(㎴)?(㎵)?(㎶)?(㎷)?(㎸)?", "");
		text = text.replaceAll("(㎹)?(㎀)?(㎁)?(㎲)?(㎃)?(㎄)?(㎺)?(㎻)?(㎼)?(㎽)?(㎾)?(㎿)?(㎐)?(㎑)?(㎒)?(㎓)?(㎔)?(Ω)?", "");
		text = text.replaceAll("(㏀)?(㏁)?(㎊)?(㎋)?(㎌)?(㏖)?(㏅)?(㎭)?(㎮)?(㎯)?(㏛)?(㎩)?(㎪)?(㎫)?(㎬)?(㏝)?(㏐)?(㏓)?(㏃)?(㏉)?(㏜)?(㏆)?", "");
		
		text = text.replaceAll("(Α)?(Β)?(Γ)?(Δ)?(Ε)?(Ζ)?(Η)?(Θ)?(Ι)?(Κ)?(Λ)?(Μ)?(Ν)?(Ξ)?(Ο)?(Π)?(Ρ)?(Σ)?", "");
		text = text.replaceAll("(Τ)?(Υ)?(Φ)?(Χ)?(Ψ)?(Ω)?(α)?(β)?(γ)?(δ)?(ε)?(ζ)?(η)?(θ)?(ι)?(κ)?(λ)?(μ)", "");
		text = text.replaceAll("(ν)?(ξ)?(ο)?(π)?(ρ)?(σ)?(τ)?(υ)?(φ)?(χ)?(ψ)?(ω)?", "");

		text = text.replaceAll("(ㄱ)?(ㄲ)?(ㄳ)?(ㄴ)?(ㄵ)?(ㄶ)?(ㄷ)?(ㄸ)?(ㄹ)?(ㄺ)?(ㄻ)?(ㄼ)?(ㄽ)?(ㄾ)?(ㄿ)?(ㅀ)?(ㅁ)?(ㅂ)?", "");
		text = text.replaceAll("(ㅃ)?(ㅄ)?(ㅅ)?(ㅆ)?(ㅇ)?(ㅈ)?(ㅉ)?(ㅊ)?(ㅋ)?(ㅌ)?(ㅍ)?(ㅎ)?(ㅏ)?(ㅐ)?(ㅑ)?(ㅒ)?(ㅓ)?(ㅔ)?", "");
		text = text.replaceAll("(ㅕ)?(ㅖ)?(ㅗ)?(ㅘ)?(ㅙ)?(ㅚ)?(ㅛ)?(ㅜ)?(ㅝ)?(ㅞ)?(ㅟ)?(ㅠ)?(ㅡ)?(ㅢ)?(ㅣ)?", "");

		text = text.replaceAll("(ㅥ)?(ㅦ)?(ㅧ)?(ㅨ)?(ㅩ)?(ㅪ)?(ㅫ)?(ㅬ)?(ㅭ)?(ㅮ)?(ㅯ)?(ㅰ)?(ㅱ)?(ㅲ)?(ㅳ)?(ㅴ)?(ㅵ)?(ㅶ)?", "");
		text = text.replaceAll("(ㅷ)?(ㅸ)?(ㅹ)?(ㅺ)?(ㅻ)?(ㅼ)?(ㅽ)?(ㅾ)?(ㅿ)?(ㆀ)?(ㆁ)?(ㆂ)?(ㆃ)?(ㆄ)?(ㆅ)?(ㆆ)?(ㆇ)?(ㆈ)?(ㆉ)?(ㆊ)?(ㆋ)?(ㆌ)?(ㆍ)?(ㆎ)?", "");

		text = text.replaceAll("(½)?(⅓)?(⅔)?(¼)?(¾)?(⅛)?(⅜)?(⅝)?(⅞)?(¹)?(²)?(³)?(⁴)?(ⁿ)?(₁)?(₂)?(₃)?(₄)?", "");
		
		text = text.replaceAll("(Ａ)?(Ｂ)?(Ｃ)?(Ｄ)?(Ｅ)?(Ｆ)?(Ｇ)?(Ｈ)?(Ｉ)?(Ｊ)?(Ｋ)?(Ｌ)?(Ｍ)?(Ｎ)?(Ｏ)?(Ｐ)?(Ｑ)?(Ｒ)?", "");
		text = text.replaceAll("(Ｓ)?(Ｔ)?(Ｕ)?(Ｖ)?(Ｗ)?(Ｘ)?(Ｙ)?(Ｚ)?(ａ)?(ｂ)?(ｃ)?(ｄ)?(ｅ)?(ｆ)?(ｇ)?(ｈ)?(ｉ)?(ｊ)?", "");
		text = text.replaceAll("(ｋ)?(ｌ)?(ｍ)?(ｎ)?(ｏ)?(ｐ)?(ｑ)?(ｒ)?(ｓ)?(ｔ)?(ｕ)?(ｖ)?(ｗ)?(ｘ)?(ｙ)?(ｚ)?", "");
		
		text = text.replaceAll("(─)?(│)?(┌)?(┐)?(┘)?(└)?(├)?(┬)?(┤)?(┴)?(┼)?(━)?(┃)?(┏)?(┓)?(┛)?(┗)?(┣)?", "");
		text = text.replaceAll("(┳)?(┫)?(┻)?(╋)?(┠)?(┯)?(┨)?(┷)?(┿)(┝)?(┰)?(┥)?(┸)?(╂)?(┒)?(┑)?(┚)?(┙)?", "");
		text = text.replaceAll("(┖)?(┕)?(┎)?(┍)?(┞)?(┟)?(┡)?(┢)?(┦)?(┧)?(┩)?(┩)?(┪)?(┭)?(┮)?(┱)?(┲)?(┵)?(┶)?", "");
		text = text.replaceAll("(┹)?(┺)?(┽)?(┾)?(╀)?(╁)?(╃)?(╄)?(╅)?(╆)?(╇)?(╈)?(╉)?(╊)?", "");
		
		text = text.replaceAll("(０)?(１)?(２)?(３)?(４)?(５)?(６)?(７)?(８)?(９)?(ⅰ)?(ⅱ)?(ⅲ)?(ⅳ)?(ⅴ)?(ⅵ)?(ⅶ)?(ⅷ)?", "");
		text = text.replaceAll("(ⅸ)?(ⅹ)?(Ⅰ)?(Ⅱ)?(Ⅲ)?(Ⅳ)?(Ⅴ)?(Ⅵ)?(Ⅶ)?(Ⅷ)?(Ⅸ)?(Ⅹ)?", "");
		
		text = text.replaceAll("(＋)?(－)?(＜)?(＝)?(＞)?(±)?(×)?(÷)?(≠)?(≤)?(≥)?(∞)?(∴)?(♂)?(♀)?(∠)?(⊥)?(⌒)?", "");
		text = text.replaceAll("(∂)?(∇)?(≡)?(≒)?(≪)?(≫)?(√)?(∽)?(∝)?(∵)?(∫)?(∬)?(∈)?(∋)?(⊆)?(⊇)?(⊂)?(⊃)?", "");
		text = text.replaceAll("(∪)?(∩)?(∧)?(∨)?(￢)?(⇒)?(⇔)?(∀)?(∃)?(∮)?(∑)?(∏)?", "");
		
		text = text.replaceAll("(　)?(！)?(＇)?(，)?(．)?(／)?(：)?(；)?(？)?(＾)?(＿)?(｀)?(｜)?(￣)?(、)?(。)?(·)?(‥)?", "");
		text = text.replaceAll("(…)?(¨)?(〃)?(­)?(―)?(∥)?(＼)?(∼)?(´)?(～)?(ˇ)?(˘)?(˝)?(˚)?(˙)?(¸)?(˛)?(¡)?", "");
		text = text.replaceAll("(¿)?(ː)?", "");
		
		text = text.replaceAll("(㉠)?(㉡)?(㉢)?(㉣)?(㉤)?(㉥)?(㉦)?(㉧)?(㉨)?(㉩)?(㉪)?(㉫)?(㉬)?(㉭)?(㉮)?(㉯)?(㉰)?(㉱)?", "");
		text = text.replaceAll("(㉲)?(㉳)?(㉴)?(㉵)?(㉶)?(㉷)?(㉸)?(㉹)?(㉺)?(㉻)?(㈀)?(㈁)?(㈂)?(㈃)?(㈄)?(㈅)?(㈆)?(㈇)?", "");
		text = text.replaceAll("(㈈)?(㈉)?(㈊)?(㈋)?(㈌)?(㈍)?(㈎)?(㈏)?(㈐)?(㈑)?(㈒)?(㈓)?(㈔)?(㈕)?(㈖)?(㈗)?(㈘)?(㈙)?(㈚)?(㈛)?", "");
		
		text = text.replaceAll("(ァ)?(ア)?(ィ)?(イ)?(ゥ)?(ウ)?(ェ)?(エ)?(ォ)?(オ)?(カ)?(ガ)?(キ)?(ギ)?(ク)?(グ)?(ケ)?(ゲ)?", "");
		text = text.replaceAll("(コ)?(ゴ)?(サ)?(ザ)?(シ)?(ジ)?(ス)?(ズ)?(セ)?(ゼ)?(ソ)?(ゾ)?(タ)?(ダ)?(チ)?(ヂ)?(ッ)?(ツ)?", "");
		text = text.replaceAll("(ヅ)?(テ)?(デ)?(ト)?(ド)?(ナ)?(ニ)?(ヌ)?(ネ)?(ノ)?(ハ)?(バ)?(パ)?(ヒ)?(ビ)?(ピ)?(フ)?(ブ)?", "");
		text = text.replaceAll("(プ)?(ヘ)?(ベ)?(ペ)?(ホ)?(ボ)?(ポ)?(マ)?(ミ)?(ム)?(メ)?(モ)?(ャ)?(ヤ)?(ュ)?(ユ)?(ョ)?(ヨ)?", "");
		text = text.replaceAll("(ラ)?(リ)?(ル)?(レ)?(ロ)?(ヮ)?(ワ)?(ヰ)?(ヱ)?(ヲ)?(ン)?(ヴ)?(ヵ)?(ヶ)?", "");
		
		text = text.replaceAll("(ぁ)?(あ)?(ぃ)?(い)?(ぅ)?(う)?(ぇ)?(え)?(ぉ)?(お)?(か)?(が)?(き)?(ぎ)?(く)?(ぐ)?(け)?(げ)?", "");
		text = text.replaceAll("(こ)?(ご)?(さ)?(ざ)?(し)?(じ)?(す)?(ず)?(せ)?(ぜ)?(そ)?(ぞ)?(た)?(だ)?(し)?(じ)?(す)?(ず)?(せ)?", "");
		text = text.replaceAll("(ぜ)?(そ)?(ぞ)?(た)?(だ)?(ち)?(ぢ)?(っ)?(つ)?(づ)?(て)?(で)?(と)?(ど)?(な)?(に)?(ぬ)?(ね)?", "");
		text = text.replaceAll("(の)?(は)?(ば)?(ぱ)?(ひ)?(び)?(ぴ)?(ふ)?(ぶ)?(ぷ)?(へ)?(べ)?(ぺ)?(ほ)?(ぼ)?(ぽ)?(ま)?(み)?", "");
		text = text.replaceAll("(む)?(め)?(も)?(ゃ)?(や)?(ゅ)?(ゆ)?(ょ)?(よ)?(ら)?(り)?(る)?(れ)?(ろ)?(ゎ)?(わ)?(ゐ)?(ゑ)?(を)?(ん)?", "");
		
		text = text.replaceAll("(Æ)?(Ð)?(Ħ)?(Ĳ)?(Ŀ)?(Ł)?(Ø)?(Œ)?(Þ)?(Ŧ)?(Ŋ)?(æ)?(đ)?(ð)?(ħ)?(ı)?(ĳ)?(ĸ)?", "");
		text = text.replaceAll("(ŀ)?(ł)?(ø)?(œ)?(ß)?(þ)?(ŧ)?(ŋ)?(ŉ)?", "");
		
		text = text.replaceAll("(А)?(Б)?(В)?(Г)?(Д)?(Е)?(Ё)?(Ж)?(З)?(И)?(Й)?(К)?(Л)?(М)?(Н)?(О)?(П)?(Р)?", "");
		text = text.replaceAll("(С)?(Т)?(У)?(Ф)?(Х)?(Ц)?(Ч)?(Ш)?(Щ)?(Ъ)?(Ы)?(Ь)?(Э)?(Ю)?(Я)?(а)?(б)?(в)?", "");
		text = text.replaceAll("(г)?(д)?(е)?(ё)?(ж)?(з)?(и)?(й)?(к)?(л)?(м)?(н)?(о)?(п)?(р)?(с)?(т)?(у)?", "");
		text = text.replaceAll("(ф)?(х)?(ц)?(ч)?(ш)?(щ)?(ъ)?(ы)?(ь)?(э)?(ю)?(я)?", "");
		
		
		text = text.replaceAll("(<!--)?(SE3-TEXT)?(-->)?(\\{)?(\\})?", "");
		text = text.replaceAll("(Not Allowed Attribute Filtered)?", "");
		text = text.replaceAll("(\\( data-kant-=*\\)     )?", "");		
		text = text.replaceAll(",", " ");
		text = text.replaceAll("     ", " ");
		text = text.replaceAll("\n", " ");
		text = text.replaceAll("\r", " ");
		text = text.replaceAll("\\s{2,}", " ").trim();

		
		return text;
	}
	
	

}
